name: CI
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches:
      - '**'
jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0 # fetch all history for all branches and tags
      - name: Push to Docker Hub
        uses: docker/build-push-action@v1
        with:
          push: true
          tags: "GITHUB_ACTION_${{ github.run_number }}"
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mmore500/signalgp-lite
          add_git_labels: true
  misc:
    runs-on: ubuntu-18.04
    needs:
      - docker-build
    name: Docs, Miscellaneous
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Adapted from https://askubuntu.com/a/524368
      - run: echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo -h 127.0.0.1 tee -a /etc/hosts
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run --cap-add=SYS_ADMIN -e CXX=$CXX -e CONTEXT=travis -i "mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}" /bin/bash -c "cd /opt/signalgp-lite && ./ci/test_trailing_whitespace.sh && ./ci/test_tabs.sh && ./ci/test_missing_newlines.sh && ./ci/test_headerguards.sh && ./ci/test_alphabetize_includes.sh && python3 ci/test_readme_snippets.py && make docs"

  unit-tests:
    runs-on: ubuntu-18.04
    name: Unit Tests
    needs:
      - docker-build
    strategy:
      matrix:
        cxx: [clang++, g++]
        mode: [opt, test]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Adapted from https://askubuntu.com/a/524368
      - run: echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo -h 127.0.0.1 tee -a /etc/hosts
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run --cap-add=SYS_ADMIN -e CXX=${{ matrix.cxx }} -e CONTEXT=travis -i "mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}" /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make {{ matrix.mode }}"

  coverage:
    runs-on: ubuntu-18.04
    name: Coverage
    needs:
      - docker-build
    env:
      CXX: clang++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Adapted from https://askubuntu.com/a/524368
      - run: echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo -h 127.0.0.1 tee -a /etc/hosts
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run --cap-add=SYS_ADMIN -e CXX=$CXX -e CONTEXT=travis -i "mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}" /bin/bash -c "cd /opt/signalgp-lite && make coverage && bash <(curl -s https://codecov.io/bash)"

  fuzzing:
    runs-on: ubuntu-18.04
    name: Fuzzing
    needs:
      - docker-build
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Adapted from https://askubuntu.com/a/524368
      - run: echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo -h 127.0.0.1 tee -a /etc/hosts
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run --cap-add=SYS_ADMIN --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -e CXX=$CXX -e CONTEXT=travis -i "mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}" /bin/bash -c "cd /opt/signalgp-lite/fuzzing && make && make opt"

  microbenchmarks:
    runs-on: ubuntu-18.04
    name: Microbenchmarks
    needs:
      - docker-build
    env:
      CXX: clang++
      OSF_PASSWORD: ${{ secrets.OSF_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Adapted from https://askubuntu.com/a/524368
      - run: echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo -h 127.0.0.1 tee -a /etc/hosts
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run --cap-add=SYS_ADMIN -e CXX=$CXX -e CONTEXT=travis -i "mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}" /bin/bash -c "cd /opt/signalgp-lite/microbenchmarks && make"

  source:
    runs-on: ubuntu-18.04
    name: Source (clang)
    needs:
      - docker-build
    strategy:
      matrix:
        cxx: [clang++, g++]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Adapted from https://askubuntu.com/a/524368
      - run: echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo -h 127.0.0.1 tee -a /etc/hosts
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run --cap-add=SYS_ADMIN -e CXX=${{ matrix.cxx }} -e CONTEXT=travis -i "mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}" /bin/bash -c "cd /opt/signalgp-lite && make test"

  demos:
    runs-on: ubuntu-18.04
    name: Run demos (clang)
    needs:
      - docker-build
    strategy:
      matrix:
        cxx: [clang++, g++]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Adapted from https://askubuntu.com/a/524368
      - run: echo $(hostname -I | cut -d\  -f1) $(hostname) | sudo -h 127.0.0.1 tee -a /etc/hosts
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker run --cap-add=SYS_ADMIN -e CXX=${{ matrix.cxx }} -e CONTEXT=travis -i "mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}" /bin/bash -c "cd /opt/signalgp-lite/demos && make opt"

  binder:
    name: Notebooks
    runs-on: ubuntu-18.04
    needs:
      - docker-build
    container:
      image: mmore500/signalgp-lite:GITHUB_ACTION_${{ github.run_number }}
      # github actions requires root to access mounted volumes
      options: --user root
    steps:
      - run: /opt/signalgp-lite/binder/execute_notebooks.sh
      - run: git init
      - uses: fregante/setup-git-user@v1
      - run: git commit --allow-empty -m "Initial commit"
      - run: cp -r /opt/signalgp-lite/ deploy/
      - uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: binder # The branch the action should deploy to.
          folder: deploy # The folder the action should deploy.

  deploy-github-pages:
    runs-on: ubuntu-18.04
    name: Deploy to GitHub Pages
    container:
      image: mmore500/conduit:GITHUB_ACTION_${{ github.run_number }}
      env:
        OSF_PASSWORD: ${{ secrets.OSF_PASSWORD }}
        OSF_USERNAME: ${{ secrets.OSF_USERNAME }}
      # github actions requires root to access mounted volumes
      options: --user root
    if: github.ref == 'refs/heads/master'
    needs:
      - docker-build
      - misc
      - unit-tests
      - coverage
      - fuzzing
      - microbenchmarks
      - source
      - demos
      - binder
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - run: make -C /opt/conduit/ web
      - run: cp -r /opt/conduit/web/ web/
      - uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: web # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch

  deploy-dockerhub:
    name: Deploy to Dockerhub
    runs-on: ubuntu-18.04
    needs:
      - docker-build
      - misc
      - unit-tests
      - coverage
      - fuzzing
      - microbenchmarks
      - source
      - demos
      - binder
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Push to DockerHub
        uses: docker/build-push-action@v1
        with:
          push: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mmore500/signalgp-lite
          tag_with_ref: true
          tag_with_sha: true
