name: CI
on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches:
      - '**'
jobs:
  misc:
    runs-on: ubuntu-18.04
    name: Docs, Miscellaneous
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && ./ci/test_trailing_whitespace.sh && ./ci/test_tabs.sh && ./ci/test_missing_newlines.sh && ./ci/test_headerguards.sh && ./ci/test_alphabetize_includes.sh && python3 ci/test_readme_snippets.py && make docs"
  unit-clang-debug:
    runs-on: ubuntu-18.04
    name: Unit Tests (clang, debug mode)
    env:
      CXX: clang++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_ADMIN -e CXX=$CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make"
  unit-gcc-debug:
    runs-on: ubuntu-18.04
    name: Unit Tests (gcc, debug mode)
    env:
      CXX: g++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_ADMIN -e CXX=$CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make"
  unit-clang-opt:
    runs-on: ubuntu-18.04
    name: Unit Tests (clang, opt mode)
    env:
      CXX: clang++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_ADMIN -e CXX=$CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make opt"
  unit-gcc-opt:
    runs-on: ubuntu-18.04
    name: Unit Tests (gcc, opt mode)
    env:
      CXX: g++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_ADMIN -e CXX=$CXX -i mmore500/signalgp-lite /bin/bash -c "set -x && cd /opt/signalgp-lite/tests && make opt"
  coverage:
    runs-on: ubuntu-18.04
    name: Coverage
    env:
      CXX: clang++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: ci_env=`bash <(curl -s https://codecov.io/env)`
      - run: sudo docker run $ci_env -e CXX=$CXX mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && make coverage && bash <(curl -s https://codecov.io/bash)"
  fuzzing:
    runs-on: ubuntu-18.04
    name: Fuzzing
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_PTRACE --security-opt seccomp=unconfined -e CXX=$CXX -e CONTEXT=travis mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite/fuzzing && make && make opt"
  microbenchmarks:
    runs-on: ubuntu-18.04
    name: Microbenchmarks
    env:
      CXX: clang++
      OSF_PASSWORD: ${{ secrets.OSF_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run -e CXX=$CXX -e OSF_PASSWORD=$OSF_PASSWORD -e CONTEXT=travis mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite/microbenchmarks && make"
  source-clang:
    runs-on: ubuntu-18.04
    name: Source (clang)
    env:
      CXX: clang++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_ADMIN mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && make test"
  source-gcc:
    runs-on: ubuntu-18.04
    name: Source (gcc)
    env:
      CXX: g++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_ADMIN mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && make test"
  demos-clang:
    runs-on: ubuntu-18.04
    name: Run demos (clang)
    env:
      CXX: clang++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_ADMIN mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite/demos && make opt"
  demos-gcc:
    runs-on: ubuntu-18.04
    name: Run demos (gcc)
    env:
      CXX: g++
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: sudo docker run --cap-add=SYS_ADMIN mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite/demos && make opt"

  binder:
    name: Notebooks
    runs-on: ubuntu-18.04
    steps:
      - run: /opt/signalgp-lite/binder/execute_notebooks.sh

  deploy-github-pages:
    runs-on: ubuntu-18.04
    name: Deploy to GitHub Pages
    needs:
      - misc
      - unit-clang-debug
      - unit-gcc-debug
      - unit-clang-opt
      - unit-gcc-opt
      - coverage
      - fuzzing
      - microbenchmarks
      - source-clang
      - source-gcc
      - demos-clang
      - demos-gcc
      - binder
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: docker-practice/actions-setup-docker@v1
      - run: docker build -t mmore500/signalgp-lite .
      - run: docker ps -a
      - run: docker run -e GH_TOKEN=$GH_TOKEN -e GITHUB_RUN_ID mmore500/signalgp-lite /bin/bash -c "cd /opt/signalgp-lite && source third-party/emsdk/emsdk_env.sh && make web && make badges && ./ci/deploy_gh_pages.sh"
